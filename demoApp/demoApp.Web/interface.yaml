openapi: 3.0.1
info:
  title: demoApp.Web
  version: '1.0'
paths:
  /api/Fleet:
    get:
      tags:
        - Fleet
      responses:
        '200':
          description: Success
  /api/Fleet/add:
    post:
      tags:
        - Fleet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleDto'
          text/json:
            schema:
              $ref: '#/components/schemas/VehicleDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VehicleDto'
      responses:
        '200':
          description: Success
  '/api/Fleet/start/{id}':
    post:
      tags:
        - Fleet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/Fleet/stop/{id}':
    post:
      tags:
        - Fleet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Fleet/shutdown:
    post:
      tags:
        - Fleet
      responses:
        '200':
          description: Success
  '/api/Fleet/{id}':
    delete:
      tags:
        - Fleet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Notes:
    get:
      tags:
        - Notes
      responses:
        '200':
          description: Success
  '/api/Notes/{id}':
    get:
      tags:
        - Notes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - Notes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteDto'
          text/json:
            schema:
              $ref: '#/components/schemas/NoteDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NoteDto'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Notes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Notes/add:
    post:
      tags:
        - Notes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteDto'
          text/json:
            schema:
              $ref: '#/components/schemas/NoteDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NoteDto'
      responses:
        '200':
          description: Success
  /api/Products:
    get:
      tags:
        - Products
      responses:
        '200':
          description: Success
  /api/Samples/getHttp:
    get:
      tags:
        - Samples
      responses:
        '200':
          description: Success
  /api/Samples/getSecure:
    get:
      tags:
        - Samples
      responses:
        '200':
          description: Success
  /api/Samples/getEnv:
    get:
      tags:
        - Samples
      responses:
        '200':
          description: Success
  /api/Samples/logSamples:
    get:
      tags:
        - Samples
      responses:
        '200':
          description: Success
  /api/Samples/logError:
    get:
      tags:
        - Samples
      responses:
        '200':
          description: Success
  /api/Samples/produceError:
    get:
      tags:
        - Samples
      responses:
        '200':
          description: Success
  /api/Samples/throwExceptionDemo:
    get:
      tags:
        - Samples
      responses:
        '200':
          description: Success
  /api/Security:
    get:
      tags:
        - Security
      responses:
        '200':
          description: Success
  /api/Security/token:
    get:
      tags:
        - Security
      responses:
        '200':
          description: Success
  /api/Token:
    get:
      tags:
        - Token
      responses:
        '200':
          description: Success
  /api/Users:
    get:
      tags:
        - Users
      responses:
        '200':
          description: Success
  '/api/Users/{id}':
    get:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UserDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '200':
          description: Success
  /api/Users/add:
    post:
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UserDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '200':
          description: Success
  /api/Values:
    get:
      tags:
        - Values
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: string
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
    post:
      tags:
        - Values
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
  '/api/Values/{id}':
    get:
      tags:
        - Values
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
    put:
      tags:
        - Values
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Values
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Vehicles:
    get:
      tags:
        - Vehicles
      responses:
        '200':
          description: Success
components:
  schemas:
    NoteDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        details:
          type: string
          nullable: true
        categoryId:
          type: integer
          format: int32
        userId:
          type: string
          nullable: true
      additionalProperties: false
    UserDto:
      type: object
      properties:
        email:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
      additionalProperties: false
    VehicleDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        licensePlate:
          type: string
          nullable: true
        temperature:
          type: number
          format: double
        lat:
          type: number
          format: double
        lon:
          type: number
          format: double
      additionalProperties: false